var sourceData2 = {"FileName":"/Users/hongweixiang/Desktop/GitHub_Repo/Data_structure_comparison/Datastructure_class/cuckooFilter.m","RawFileContents":["classdef cuckooFilter","    properties","        X; % the input array","        bitnum; % number of bit of the hashing value.","        arrsize; % the size of the array is defined by the number of bit of the hashing output value.","        bucketarr; % the bucket array.","        maxkick; % the maximum time of kicking item, otherwise stop finding other site for the kicked item because the bucket array is full.","        fullyadd; % whether add all the item of X into bucket.","    end","    methods","        function obj = cuckooFilter(X, bitnum, maxkick)","            obj.X = X;","            obj.bitnum = bitnum;","            obj.arrsize = 2^bitnum;","            obj.bucketarr = strings([1, obj.arrsize]);% initialize the bucket array. **the array has no value yet.","            obj.maxkick = maxkick;","            obj.fullyadd = false;","        end % end function.","        ","        function obj = addelement(obj) % add all element of X into the cuckoo filter","            for i = 1:length(obj.X) ","                [obj,success] = obj.cuckooadd(obj.X(i)); % add element into bucket","                if ~success % it can't add in anymore item so return false ;","                    fprintf(\"Bucket full. No more add. Already add %d element\\n\", i-1);","                    break","                end % end if.","            end","            obj.fullyadd = success; % loop through all element success!","        end % end function","","        function hashindex = hashcuckoo(obj, element)% it hash the item 'element' into n-bits string for index . EX:'00101010'. And it return a 8-bits code with item 's'","            % input: element(String) is the element we want to hash, bitnum(int) is the number of bit the result index will be.","            % return : hashindex(char) is a n-bits binary value. EX: '11101101'","            import java.lang.*;","            import java.security.*;","            messaged = MessageDigest.getInstance('MD5');","            hashvalue = abs(messaged.digest(double(char(element))));","            if(obj.bitnum == 8)","                hashvalue = uint8(hashvalue(1)) + uint8(hashvalue(2)); %for 8-bits","                hashindex = dec2bin(hashvalue,obj.bitnum); % turn the number(<256) into bits EX: 11110011","            else","                hashindex = strcat(char(dec2bin(hashvalue(1),8)), char(dec2bin(hashvalue(1),8))); % hash the number into 16-bits EX: 0111111101110100","            end","        end %end function","","        function newXORindex= xorhashIndex(obj, kickedfingerprint, hashindex)% (collideIndex) XOR hash(fingerprinted of the kicked object)  %return the new index ","            % input: kickedfinger(string) is the fgp need to be relocated, hashindex(int) is the index where the collision happend,","            % bitnum(int) is the number of bit of the index.","            % return: integer of new index for \"kickedfingerprint\".","            newInBeforeXOR = obj.hashcuckoo(kickedfingerprint); % get the new index calculate with the kicked element's fingerprint","            newInBeforeXOR = logical(newInBeforeXOR(:)'-'0'); % turn it into bit","            collideBitIndex = dec2bin(hashindex+1, obj.bitnum); %turn the collide index  to binary bit.","            collideBitIndex = logical(collideBitIndex(:)'-'0'); % turn it into bit","            newXORindex = bin2dec(char(xor(newInBeforeXOR,collideBitIndex)+'0')); % turn the binary bit to integer","            if(obj.bitnum ~= 8)","                newXORindex = newXORindex + randi([1,100],1);","            end","        end %end function","","        function [obj,success] = cuckooadd(obj, element)% add one element into the bucket","            % input : element(String) is the element we want to put into the cuckoo filter","            fgp = mlreportgen.utils.hash(element);% get the fingerprint for item","","            hashindex = bin2dec(obj.hashcuckoo(element)); % get the index of hashing and turn the n-bit to actual number ","            %fprintf('element %s fingerprint %s at index %d\\n', element, fgp, hashindex+1)","            ","            %check if the index is taken","            if obj.bucketarr(hashindex+1) == \"\" % the site is not taken","                obj.bucketarr(hashindex+1) = fgp;","                success = true;","                return;","","            else % site is taken, so find other site(new index) for the moved item. ","                collisionIndex = hashindex; % the index to focus on","                movedfingerp = obj.bucketarr(hashindex+1); % the fingerpritn to be kicked out","                obj.bucketarr(hashindex+1) = fgp; % the move-in fgp","                %fprintf(\"collide at %d and %s be kicked \\n\", hashindex + 1, movedfingerp)","                ","                for kick = 1:obj.maxkick","                    % get the new index for the moved item. ***new index = (old index) XOR (hash(fingerprint))","                    newindex = obj.xorhashIndex(movedfingerp, hashindex); %hashindex don't need to +1 we'll do that in function.","                    if obj.bucketarr(newindex + 1) == \"\" % the new site isnot taken","                        obj.bucketarr(newindex + 1) = movedfingerp;","                        %fprintf(\"kick element %s to new index %d\\n\", movedfingerp, newindex+1)","                        success = true;","                        return;","                    else % the index is \"still\" taken so we need the swap the \"movedfinger\" - the victim is changed","                        %fprintf(\"new index %d taken. Move %s away\\n\", newindex+1, obj.bucketarr(newindex+1));","                        tempstorefingerp = obj.bucketarr(newindex + 1); % temp store the kicked fingerprint","                        obj.bucketarr(newindex+1) = movedfingerp;% bring in the move-in fingerprint","                        movedfingerp = tempstorefingerp; % assign the new victim.","                        collisionIndex = newindex + 1; % update the new collided index.","                    end % end if","                end % end for","                success = false;% can't find any index after we reach the maxkick time of iteration.","            end % end if       ","        end % end function ","","        function found = search(obj, lookup) % lookup(char) the element we want to search in the bucket with binary search.","                lookfp = mlreportgen.utils.hash(lookup); % get the fingerprint of the lookup item","                found = false; % whether found ","                %delete the empty cell and sort the bucket for efficiently lookup","                temp_bucketarr = obj.bucketarr(~cellfun('isempty', obj.bucketarr));","                temp_bucketarr = sort(temp_bucketarr); % sort for the binary search","                found = obj.binarysearch(char(lookfp), temp_bucketarr); % turn lookfp into char for the binary search","        end %end function ","","        % binary search function %return[(true/false), (index)] ","        function found = binarysearch(obj, lookup, sortedarr)","            %input: lookup(char) is the fingerprint of item we want to search, sortedarr(arr) the 'sorted' array.","            upper = length(sortedarr);","            lower = 1;","            found = false; % whether found ","            % searching ","            while lower<=upper","                middle = ceil((upper + lower)/2);","                if sortedarr(middle) == lookup","                    found = true;","                    return;","                elseif sortedarr(middle) <= lookup","                    lower = middle + 1;","                else ","                    upper = middle - 1;","                end","            end","            found = false;","        end","","    end % end methods","end % end class"],"CoverageDisplayDataPerLine":{"Statement":[{"LineNumber":12,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":13,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":14,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":15,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":16,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":34,"ContinuedLine":false},{"LineNumber":17,"Hits":10,"StartColumnNumbers":12,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":21,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":22,"Hits":72,"StartColumnNumbers":16,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":23,"Hits":72,"StartColumnNumbers":16,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":24,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":87,"ContinuedLine":false},{"LineNumber":25,"Hits":1,"StartColumnNumbers":20,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":28,"Hits":3,"StartColumnNumbers":12,"EndColumnNumbers":35,"ContinuedLine":false},{"LineNumber":36,"Hits":92,"StartColumnNumbers":12,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":37,"Hits":92,"StartColumnNumbers":12,"EndColumnNumbers":68,"ContinuedLine":false},{"LineNumber":38,"Hits":92,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":39,"Hits":90,"StartColumnNumbers":16,"EndColumnNumbers":70,"ContinuedLine":false},{"LineNumber":40,"Hits":90,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":42,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":97,"ContinuedLine":false},{"LineNumber":50,"Hits":17,"StartColumnNumbers":12,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":51,"Hits":17,"StartColumnNumbers":12,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":52,"Hits":17,"StartColumnNumbers":12,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":53,"Hits":17,"StartColumnNumbers":12,"EndColumnNumbers":63,"ContinuedLine":false},{"LineNumber":54,"Hits":17,"StartColumnNumbers":12,"EndColumnNumbers":81,"ContinuedLine":false},{"LineNumber":55,"Hits":17,"StartColumnNumbers":12,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":56,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":61,"ContinuedLine":false},{"LineNumber":62,"Hits":73,"StartColumnNumbers":12,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":64,"Hits":73,"StartColumnNumbers":12,"EndColumnNumbers":57,"ContinuedLine":false},{"LineNumber":68,"Hits":73,"StartColumnNumbers":12,"EndColumnNumbers":47,"ContinuedLine":false},{"LineNumber":69,"Hits":58,"StartColumnNumbers":16,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":70,"Hits":58,"StartColumnNumbers":16,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":71,"Hits":58,"StartColumnNumbers":16,"EndColumnNumbers":23,"ContinuedLine":false},{"LineNumber":74,"Hits":15,"StartColumnNumbers":16,"EndColumnNumbers":43,"ContinuedLine":false},{"LineNumber":75,"Hits":15,"StartColumnNumbers":16,"EndColumnNumbers":58,"ContinuedLine":false},{"LineNumber":76,"Hits":15,"StartColumnNumbers":16,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":79,"Hits":15,"StartColumnNumbers":16,"EndColumnNumbers":40,"ContinuedLine":false},{"LineNumber":81,"Hits":15,"StartColumnNumbers":20,"EndColumnNumbers":73,"ContinuedLine":false},{"LineNumber":82,"Hits":15,"StartColumnNumbers":20,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":83,"Hits":14,"StartColumnNumbers":24,"EndColumnNumbers":67,"ContinuedLine":false},{"LineNumber":85,"Hits":14,"StartColumnNumbers":24,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":86,"Hits":14,"StartColumnNumbers":24,"EndColumnNumbers":31,"ContinuedLine":false},{"LineNumber":89,"Hits":1,"StartColumnNumbers":24,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":90,"Hits":1,"StartColumnNumbers":24,"EndColumnNumbers":65,"ContinuedLine":false},{"LineNumber":91,"Hits":1,"StartColumnNumbers":24,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":92,"Hits":1,"StartColumnNumbers":24,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":95,"Hits":1,"StartColumnNumbers":16,"EndColumnNumbers":32,"ContinuedLine":false},{"LineNumber":100,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":101,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":103,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":83,"ContinuedLine":false},{"LineNumber":104,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":54,"ContinuedLine":false},{"LineNumber":105,"Hits":2,"StartColumnNumbers":16,"EndColumnNumbers":71,"ContinuedLine":false},{"LineNumber":111,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":112,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":22,"ContinuedLine":false},{"LineNumber":113,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false},{"LineNumber":115,"Hits":4,"StartColumnNumbers":12,"EndColumnNumbers":30,"ContinuedLine":false},{"LineNumber":116,"Hits":15,"StartColumnNumbers":16,"EndColumnNumbers":49,"ContinuedLine":false},{"LineNumber":117,"Hits":15,"StartColumnNumbers":16,"EndColumnNumbers":46,"ContinuedLine":false},{"LineNumber":118,"Hits":2,"StartColumnNumbers":20,"EndColumnNumbers":33,"ContinuedLine":false},{"LineNumber":119,"Hits":2,"StartColumnNumbers":20,"EndColumnNumbers":27,"ContinuedLine":false},{"LineNumber":120,"Hits":13,"StartColumnNumbers":16,"EndColumnNumbers":50,"ContinuedLine":false},{"LineNumber":121,"Hits":3,"StartColumnNumbers":20,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":123,"Hits":10,"StartColumnNumbers":20,"EndColumnNumbers":39,"ContinuedLine":false},{"LineNumber":126,"Hits":2,"StartColumnNumbers":12,"EndColumnNumbers":26,"ContinuedLine":false}],"Function":[{"LineNumber":11,"Hits":10,"StartColumnNumbers":8,"EndColumnNumbers":55,"ContinuedLine":false},{"LineNumber":20,"Hits":3,"StartColumnNumbers":8,"EndColumnNumbers":38,"ContinuedLine":false},{"LineNumber":31,"Hits":92,"StartColumnNumbers":8,"EndColumnNumbers":53,"ContinuedLine":false},{"LineNumber":46,"Hits":17,"StartColumnNumbers":8,"EndColumnNumbers":77,"ContinuedLine":false},{"LineNumber":60,"Hits":73,"StartColumnNumbers":8,"EndColumnNumbers":56,"ContinuedLine":false},{"LineNumber":99,"Hits":2,"StartColumnNumbers":8,"EndColumnNumbers":44,"ContinuedLine":false},{"LineNumber":109,"Hits":4,"StartColumnNumbers":8,"EndColumnNumbers":61,"ContinuedLine":false}]}}